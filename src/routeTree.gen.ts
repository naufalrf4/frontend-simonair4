/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthorizedRouteImport } from './routes/unauthorized'
import { Route as DashboardRouteImport } from './routes/_dashboard'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as R404RouteImport } from './routes/404'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OauthCallbackRouteImport } from './routes/oauth/callback'
import { Route as DashboardNotificationsRouteImport } from './routes/_dashboard/notifications'
import { Route as DashboardDashboardRouteImport } from './routes/_dashboard/dashboard'
import { Route as AuthRegisterRouteImport } from './routes/_auth/register'
import { Route as AuthLoginRouteImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as DashboardFarmingWaterChangeRouteImport } from './routes/_dashboard/farming/water-change'
import { Route as DashboardFarmingManualDataRouteImport } from './routes/_dashboard/farming/manual-data'
import { Route as DashboardFarmingFishMortalityRouteImport } from './routes/_dashboard/farming/fish-mortality'
import { Route as DashboardFarmingFishGrowthRouteImport } from './routes/_dashboard/farming/fish-growth'
import { Route as DashboardFarmingFeedsRouteImport } from './routes/_dashboard/farming/feeds'
import { Route as DashboardDevicesSensorTrendsRouteImport } from './routes/_dashboard/devices/sensor-trends'
import { Route as DashboardDevicesSensorDataRouteImport } from './routes/_dashboard/devices/sensor-data'
import { Route as DashboardDevicesManageRouteImport } from './routes/_dashboard/devices/manage'
import { Route as DashboardAdminUsersRouteImport } from './routes/_dashboard/admin/users'
import { Route as DashboardMobileFarmingRouteImport } from './routes/_dashboard/_mobile/farming'
import { Route as DashboardMobileDevicesRouteImport } from './routes/_dashboard/_mobile/devices'
import { Route as DashboardMobileAdminRouteImport } from './routes/_dashboard/_mobile/admin'
import { Route as AuthResetPasswordTokenRouteImport } from './routes/_auth/reset-password/$token'

const UnauthorizedRoute = UnauthorizedRouteImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const R404Route = R404RouteImport.update({
  id: '/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OauthCallbackRoute = OauthCallbackRouteImport.update({
  id: '/oauth/callback',
  path: '/oauth/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardNotificationsRoute = DashboardNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDashboardRoute = DashboardDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardFarmingWaterChangeRoute =
  DashboardFarmingWaterChangeRouteImport.update({
    id: '/farming/water-change',
    path: '/farming/water-change',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardFarmingManualDataRoute =
  DashboardFarmingManualDataRouteImport.update({
    id: '/farming/manual-data',
    path: '/farming/manual-data',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardFarmingFishMortalityRoute =
  DashboardFarmingFishMortalityRouteImport.update({
    id: '/farming/fish-mortality',
    path: '/farming/fish-mortality',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardFarmingFishGrowthRoute =
  DashboardFarmingFishGrowthRouteImport.update({
    id: '/farming/fish-growth',
    path: '/farming/fish-growth',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardFarmingFeedsRoute = DashboardFarmingFeedsRouteImport.update({
  id: '/farming/feeds',
  path: '/farming/feeds',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardDevicesSensorTrendsRoute =
  DashboardDevicesSensorTrendsRouteImport.update({
    id: '/devices/sensor-trends',
    path: '/devices/sensor-trends',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardDevicesSensorDataRoute =
  DashboardDevicesSensorDataRouteImport.update({
    id: '/devices/sensor-data',
    path: '/devices/sensor-data',
    getParentRoute: () => DashboardRoute,
  } as any)
const DashboardDevicesManageRoute = DashboardDevicesManageRouteImport.update({
  id: '/devices/manage',
  path: '/devices/manage',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardAdminUsersRoute = DashboardAdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMobileFarmingRoute = DashboardMobileFarmingRouteImport.update({
  id: '/_mobile/farming',
  path: '/farming',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMobileDevicesRoute = DashboardMobileDevicesRouteImport.update({
  id: '/_mobile/devices',
  path: '/devices',
  getParentRoute: () => DashboardRoute,
} as any)
const DashboardMobileAdminRoute = DashboardMobileAdminRouteImport.update({
  id: '/_mobile/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)
const AuthResetPasswordTokenRoute = AuthResetPasswordTokenRouteImport.update({
  id: '/reset-password/$token',
  path: '/reset-password/$token',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/unauthorized': typeof UnauthorizedRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/oauth/callback': typeof OauthCallbackRoute
  '/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/admin': typeof DashboardMobileAdminRoute
  '/devices': typeof DashboardMobileDevicesRoute
  '/farming': typeof DashboardMobileFarmingRoute
  '/admin/users': typeof DashboardAdminUsersRoute
  '/devices/manage': typeof DashboardDevicesManageRoute
  '/devices/sensor-data': typeof DashboardDevicesSensorDataRoute
  '/devices/sensor-trends': typeof DashboardDevicesSensorTrendsRoute
  '/farming/feeds': typeof DashboardFarmingFeedsRoute
  '/farming/fish-growth': typeof DashboardFarmingFishGrowthRoute
  '/farming/fish-mortality': typeof DashboardFarmingFishMortalityRoute
  '/farming/manual-data': typeof DashboardFarmingManualDataRoute
  '/farming/water-change': typeof DashboardFarmingWaterChangeRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/unauthorized': typeof UnauthorizedRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/notifications': typeof DashboardNotificationsRoute
  '/oauth/callback': typeof OauthCallbackRoute
  '/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/admin': typeof DashboardMobileAdminRoute
  '/devices': typeof DashboardMobileDevicesRoute
  '/farming': typeof DashboardMobileFarmingRoute
  '/admin/users': typeof DashboardAdminUsersRoute
  '/devices/manage': typeof DashboardDevicesManageRoute
  '/devices/sensor-data': typeof DashboardDevicesSensorDataRoute
  '/devices/sensor-trends': typeof DashboardDevicesSensorTrendsRoute
  '/farming/feeds': typeof DashboardFarmingFeedsRoute
  '/farming/fish-growth': typeof DashboardFarmingFishGrowthRoute
  '/farming/fish-mortality': typeof DashboardFarmingFishMortalityRoute
  '/farming/manual-data': typeof DashboardFarmingManualDataRoute
  '/farming/water-change': typeof DashboardFarmingWaterChangeRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/404': typeof R404Route
  '/_auth': typeof AuthRouteWithChildren
  '/_dashboard': typeof DashboardRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/notifications': typeof DashboardNotificationsRoute
  '/oauth/callback': typeof OauthCallbackRoute
  '/_auth/reset-password/$token': typeof AuthResetPasswordTokenRoute
  '/_dashboard/_mobile/admin': typeof DashboardMobileAdminRoute
  '/_dashboard/_mobile/devices': typeof DashboardMobileDevicesRoute
  '/_dashboard/_mobile/farming': typeof DashboardMobileFarmingRoute
  '/_dashboard/admin/users': typeof DashboardAdminUsersRoute
  '/_dashboard/devices/manage': typeof DashboardDevicesManageRoute
  '/_dashboard/devices/sensor-data': typeof DashboardDevicesSensorDataRoute
  '/_dashboard/devices/sensor-trends': typeof DashboardDevicesSensorTrendsRoute
  '/_dashboard/farming/feeds': typeof DashboardFarmingFeedsRoute
  '/_dashboard/farming/fish-growth': typeof DashboardFarmingFishGrowthRoute
  '/_dashboard/farming/fish-mortality': typeof DashboardFarmingFishMortalityRoute
  '/_dashboard/farming/manual-data': typeof DashboardFarmingManualDataRoute
  '/_dashboard/farming/water-change': typeof DashboardFarmingWaterChangeRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/404'
    | '/unauthorized'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/notifications'
    | '/oauth/callback'
    | '/reset-password/$token'
    | '/admin'
    | '/devices'
    | '/farming'
    | '/admin/users'
    | '/devices/manage'
    | '/devices/sensor-data'
    | '/devices/sensor-trends'
    | '/farming/feeds'
    | '/farming/fish-growth'
    | '/farming/fish-mortality'
    | '/farming/manual-data'
    | '/farming/water-change'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/unauthorized'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/dashboard'
    | '/notifications'
    | '/oauth/callback'
    | '/reset-password/$token'
    | '/admin'
    | '/devices'
    | '/farming'
    | '/admin/users'
    | '/devices/manage'
    | '/devices/sensor-data'
    | '/devices/sensor-trends'
    | '/farming/feeds'
    | '/farming/fish-growth'
    | '/farming/fish-mortality'
    | '/farming/manual-data'
    | '/farming/water-change'
  id:
    | '__root__'
    | '/'
    | '/404'
    | '/_auth'
    | '/_dashboard'
    | '/unauthorized'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/_dashboard/dashboard'
    | '/_dashboard/notifications'
    | '/oauth/callback'
    | '/_auth/reset-password/$token'
    | '/_dashboard/_mobile/admin'
    | '/_dashboard/_mobile/devices'
    | '/_dashboard/_mobile/farming'
    | '/_dashboard/admin/users'
    | '/_dashboard/devices/manage'
    | '/_dashboard/devices/sensor-data'
    | '/_dashboard/devices/sensor-trends'
    | '/_dashboard/farming/feeds'
    | '/_dashboard/farming/fish-growth'
    | '/_dashboard/farming/fish-mortality'
    | '/_dashboard/farming/manual-data'
    | '/_dashboard/farming/water-change'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
  UnauthorizedRoute: typeof UnauthorizedRoute
  OauthCallbackRoute: typeof OauthCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/404': {
      id: '/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof R404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/oauth/callback': {
      id: '/oauth/callback'
      path: '/oauth/callback'
      fullPath: '/oauth/callback'
      preLoaderRoute: typeof OauthCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/notifications': {
      id: '/_dashboard/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof DashboardNotificationsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_dashboard/farming/water-change': {
      id: '/_dashboard/farming/water-change'
      path: '/farming/water-change'
      fullPath: '/farming/water-change'
      preLoaderRoute: typeof DashboardFarmingWaterChangeRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/farming/manual-data': {
      id: '/_dashboard/farming/manual-data'
      path: '/farming/manual-data'
      fullPath: '/farming/manual-data'
      preLoaderRoute: typeof DashboardFarmingManualDataRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/farming/fish-mortality': {
      id: '/_dashboard/farming/fish-mortality'
      path: '/farming/fish-mortality'
      fullPath: '/farming/fish-mortality'
      preLoaderRoute: typeof DashboardFarmingFishMortalityRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/farming/fish-growth': {
      id: '/_dashboard/farming/fish-growth'
      path: '/farming/fish-growth'
      fullPath: '/farming/fish-growth'
      preLoaderRoute: typeof DashboardFarmingFishGrowthRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/farming/feeds': {
      id: '/_dashboard/farming/feeds'
      path: '/farming/feeds'
      fullPath: '/farming/feeds'
      preLoaderRoute: typeof DashboardFarmingFeedsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/devices/sensor-trends': {
      id: '/_dashboard/devices/sensor-trends'
      path: '/devices/sensor-trends'
      fullPath: '/devices/sensor-trends'
      preLoaderRoute: typeof DashboardDevicesSensorTrendsRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/devices/sensor-data': {
      id: '/_dashboard/devices/sensor-data'
      path: '/devices/sensor-data'
      fullPath: '/devices/sensor-data'
      preLoaderRoute: typeof DashboardDevicesSensorDataRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/devices/manage': {
      id: '/_dashboard/devices/manage'
      path: '/devices/manage'
      fullPath: '/devices/manage'
      preLoaderRoute: typeof DashboardDevicesManageRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/admin/users': {
      id: '/_dashboard/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof DashboardAdminUsersRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/_mobile/farming': {
      id: '/_dashboard/_mobile/farming'
      path: '/farming'
      fullPath: '/farming'
      preLoaderRoute: typeof DashboardMobileFarmingRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/_mobile/devices': {
      id: '/_dashboard/_mobile/devices'
      path: '/devices'
      fullPath: '/devices'
      preLoaderRoute: typeof DashboardMobileDevicesRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_dashboard/_mobile/admin': {
      id: '/_dashboard/_mobile/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardMobileAdminRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_auth/reset-password/$token': {
      id: '/_auth/reset-password/$token'
      path: '/reset-password/$token'
      fullPath: '/reset-password/$token'
      preLoaderRoute: typeof AuthResetPasswordTokenRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordTokenRoute: typeof AuthResetPasswordTokenRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordTokenRoute: AuthResetPasswordTokenRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardNotificationsRoute: typeof DashboardNotificationsRoute
  DashboardMobileAdminRoute: typeof DashboardMobileAdminRoute
  DashboardMobileDevicesRoute: typeof DashboardMobileDevicesRoute
  DashboardMobileFarmingRoute: typeof DashboardMobileFarmingRoute
  DashboardAdminUsersRoute: typeof DashboardAdminUsersRoute
  DashboardDevicesManageRoute: typeof DashboardDevicesManageRoute
  DashboardDevicesSensorDataRoute: typeof DashboardDevicesSensorDataRoute
  DashboardDevicesSensorTrendsRoute: typeof DashboardDevicesSensorTrendsRoute
  DashboardFarmingFeedsRoute: typeof DashboardFarmingFeedsRoute
  DashboardFarmingFishGrowthRoute: typeof DashboardFarmingFishGrowthRoute
  DashboardFarmingFishMortalityRoute: typeof DashboardFarmingFishMortalityRoute
  DashboardFarmingManualDataRoute: typeof DashboardFarmingManualDataRoute
  DashboardFarmingWaterChangeRoute: typeof DashboardFarmingWaterChangeRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardNotificationsRoute: DashboardNotificationsRoute,
  DashboardMobileAdminRoute: DashboardMobileAdminRoute,
  DashboardMobileDevicesRoute: DashboardMobileDevicesRoute,
  DashboardMobileFarmingRoute: DashboardMobileFarmingRoute,
  DashboardAdminUsersRoute: DashboardAdminUsersRoute,
  DashboardDevicesManageRoute: DashboardDevicesManageRoute,
  DashboardDevicesSensorDataRoute: DashboardDevicesSensorDataRoute,
  DashboardDevicesSensorTrendsRoute: DashboardDevicesSensorTrendsRoute,
  DashboardFarmingFeedsRoute: DashboardFarmingFeedsRoute,
  DashboardFarmingFishGrowthRoute: DashboardFarmingFishGrowthRoute,
  DashboardFarmingFishMortalityRoute: DashboardFarmingFishMortalityRoute,
  DashboardFarmingManualDataRoute: DashboardFarmingManualDataRoute,
  DashboardFarmingWaterChangeRoute: DashboardFarmingWaterChangeRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
  UnauthorizedRoute: UnauthorizedRoute,
  OauthCallbackRoute: OauthCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
